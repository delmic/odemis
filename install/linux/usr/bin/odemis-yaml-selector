#!/bin/bash

# change search dir to the target directory where the main files are placed
search_dir='/usr/share/odemis/'
# adjust the search pattern to match a unique filename identifier
search_pat='*meteor-main*.yaml'
mic_list=()
# keep track of a counter to store the index of the user selection
counter=0

# find all the files matching the search pattern and store them in an array
files=($(find $search_dir -name $search_pat -exec basename {} \;))

for fn in ${files[@]};
do
    # extract the microscope name by using this small Python script
    # note: does not check for errors when parsing
    #       spaces in the microscope names cannot be parsed
    mic_name=$(python3 -c "import sys; import yaml; from odemis.odemisd import modelgen; f = open('$search_dir$fn');
                          d = yaml.load(f, modelgen.SafeLoader); print(next(n for n, d in d.items() if d.get('class') == 'Microscope'))")
    mic_list+=($mic_name)
done

# prompt the user with a list of microscope configurations to choose from
selection=$(zenity --list --title "Config file selection" --list --text "Please select a METEOR model to start:" --column "" ${mic_list[@]} --hide-header --width=300 --height=400 2>/dev/null)

# use the counter to determine the index of the users choice
for fn in ${mic_list[@]};
do
    if test "$fn" = "$selection"
    then
        break
    fi
    let counter++
done

# merge the selected file name with the specified path
selected_file=$search_dir${files[$counter]}

if test "$selection" != ""
then
    odemis-start $selected_file
fi
