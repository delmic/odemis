# This workflow will check for exceptions to raise properly and do not generate syntax errors.
# Also old code style using parenthesis in class definitions will be checked

name: Syntax checking

on:
  [push, pull_request]
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]

    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Get changed python files
      id: changed-files
      uses: tj-actions/changed-files@v42
      with:
          files: |
             **.py

    - name: Check Python syntax
      # Is it compatible with the Python version of this Ubuntu?
      run: |
        for changed_file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            py3compile -q "$changed_file"
        done

    - name: Check exceptions
      if: ${{ !cancelled() }}
      # Not related to tests, but to QA in general: Exceptions usually take only 1 argument
      # So a comma is probably a sign of syntax error and should be replaced by a %
      run: |
        grep -IrE --colour 'raise .+".*%.*",' --include=*.py ./src/odemis ./scripts/ ./plugins/ || exit 0
        if [[ $? -eq 0 ]]; then
           echo "Found the above syntax errors in exceptions, this is a sign that a comma should be replaced by a %."        
           exit 1
        fi

    - name: Check old style classes
      if: ${{ !cancelled() }}
      # Only use parenthesis in class definition if there is inheritance (code-style)
      run: |        
        grep -IrE --colour "class .+\(\).*:" --include=*.py ./src/odemis || exit 0
        if [[ $? -eq 0 ]]; then
           echo "The above syntax errors were found, only use parenthesis in class definition if there is inheritance (code-style)."
           exit 1  
        fi
