#!/bin/bash
# Release a new Odemis release
#
# Prerequisites are that you can build the Odemis package and upload it to the PPA.
# That means your computer has the build tools installed (devscripts), configured
# a signature, and are allowed to upload packages to the odemis PPA (on launchpad.net)
# The odemis git repo is clone in ~/development/odemis, and the main github repo is
# called "upstream".
#
# Beforehand, make sure you have already:
#  1. switched to the right branch (eg, v2.6-branch)
#  2. updated setup.py with the correct version number (eg, 2.6.1)
#  3. updated the changelog with dch -i (version should be like "2.6.1-1")
#  4. all is commited
# Call with "release-odemis".
#
# Note: for a new major release (eg v2.7), it does NOT create a new branch
# Create it (after updating the changelog) with:
# git checkout -b v2.7-branch $commit-number-to-branch-from$
#
# It will:
#  1. Tag the git repo with the changelog as description
#  2. Push to the upstream remote
#  3. Switch to ../pkg-native/odemis/ and update the repo
#  4. Build for bionic (18.04), focal (20.04) and jammy (22.04).

if [ ! -d ~/development/pkg-native/odemis ]; then
     echo "Need directory ~/development/pkg-native/odemis with a clone of the odemis repository. Creating one now..."
     # Do so with:
     mkdir -p ~/development/pkg-native/
     cd ~/development/pkg-native/
     git clone https://github.com/delmic/odemis.git
fi

cd ~/development/odemis

# Uncomment this line to run line-per-line
# trap 'read -p "run: $BASH_COMMAND"' DEBUG

# Get the version number from the debian/changelog file
PVERSION=$(dpkg-parsechangelog -S Version) # should be like "3.1.2-1"
if ! [[ "$PVERSION" =~ .*-1$ ]]; then
    echo "Version should finish by -1, but found $PVERSION"
    exit 1
fi

# Drop the -1
RELVER=${PVERSION:0:-2} # Should be like "3.1.2"
if ! [[ "$RELVER" =~ [2-9]\.[0-9]+\.[0-9]+$ ]] ; then
    echo "Version $RELVER doesn't seem proper" 
    exit 1
fi

# Check everything is commited
if [ -n "$(git diff)" ]; then
    echo "Tree no clean, make sure to commit all the changes first"
    exit 1
fi

# check the branch is correct
VBRANCH=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
if ! [[ "$VBRANCH" =~ v.*-branch$ ]]; then
    echo "Branch must be named vN.M-branch."
    exit 1
fi

# check that a the version in setup.py is correct
if ! grep -q "VERSION = \"$RELVER\"$" setup.py; then
    echo "setup.py should contain the version $RELVER"
    exit 1
fi

# Use the change log to annotate the tag
echo "==================================================================="
dpkg-parsechangelog -S Changes | tail -n +4
echo "Will use the above changelog for tag v$RELVER: [Yn] "
read answer
if [[ $answer =~ ^[nN].* ]]; then
    exit 2
fi
dpkg-parsechangelog -S Changes | tail -n +4 | git tag -a v$RELVER -F -

# TODO: for a minor release, this is sufficient:
#git push upstream
git push --set-upstream upstream $VBRANCH
git push --tags upstream

# Go to package directory, and build the debian package
cd ~/development/pkg-native/odemis

git checkout $VBRANCH
git pull

BPVERSION=$(dpkg-parsechangelog -S Version) # should start with "$RELVER-1"
if [[ "$BPVERSION" != "$PVERSION" ]]; then
    echo "Failed to get version $PVERSION on the build directory"
    exit 1
fi

read -p "Build odemis $RELVER and upload it? [Yn] " answer
if [[ $answer =~ ^[nN].* ]]; then
    exit 2
fi
git archive --prefix=odemis/ -o ../odemis_${RELVER}.orig.tar.gz HEAD || exit 1
debuild -S || exit 1

# TODO: if the version ends by ".0", push to proposed
dput ppa:delmic-soft/odemis ../odemis_${PVERSION}_source.changes

# Also rebuild the package to "focal" (Ubuntu 20.04)
# Just add to debian changelog
dch -D focal -v ${PVERSION}focal1 "Rebuild for focal"

debuild -S || exit 1
# Immediately drop the changes
git reset --hard HEAD

dput ppa:delmic-soft/odemis ../odemis_${PVERSION}focal1_source.changes

# Also rebuild the package to "jammy" (Ubuntu 22.04)
# Just add to debian changelog
dch -D jammy -v ${PVERSION}jammy1 "Rebuild for jammy"

debuild -S || exit 1
# Immediately drop the changes
git reset --hard HEAD

dput ppa:delmic-soft/odemis ../odemis_${PVERSION}jammy1_source.changes

# TODO: also compile for Windows
